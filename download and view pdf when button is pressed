import SwiftUI
import PDFKit

struct PDFViewer: UIViewRepresentable {
    func makeUIView(context: Context) -> PDFView {
        let pdfView = PDFView()
        return pdfView
    }
    func updateUIView(_ uiView: PDFView, context: Context) {}
}

struct ContentView: View {
    @State private var showPDF = false
    var body: some View {
        Button(action: {
            // code to download PDF goes here
            let url = URL(string: "https://example.com/example.pdf")!
            let pdfDocument = PDFDocument(url: url)
            PDFViewer.pdfDocument = pdfDocument
            self.showPDF = true
        }) {
            Text("Download and View PDF")
        }.sheet(isPresented: $showPDF) {
            PDFViewer()
        }
    }
}


************
another example

import SwiftUI
import WebKit

struct PDFViewer: UIViewRepresentable {
    let request: URLRequest
    
    func makeUIView(context: Context) -> WKWebView {
        return WKWebView()
    }
    
    func updateUIView(_ uiView: WKWebView, context: Context) {
        uiView.load(request)
    }
}

struct ContentView: View {
    @State private var showPDF = false
    let pdfURL = URL(string: "https://www.example.com/sample.pdf")!
    
    var body: some View {
        VStack {
            Button(action: {
                self.showPDF.toggle()
            }) {
                Text("Download and View PDF")
            }
            
            if showPDF {
                PDFViewer(request: URLRequest(url: pdfURL))
            }
        }
    }
}
